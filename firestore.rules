rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth.uid != null;
    }

    function isCurrentUser(userId) {
      return request.auth.uid == userId;
    }

    function isInRoom(roomId) {
      return isAuth() && (
        exists(/databases/$(database)/documents/publicRooms/$(roomId)) ||
          roomId in get(/databases/$(database)/documents/userRooms/$(request.auth.uid)).data.rooms
      );
    }

    function isCreator(createdBy) {
      return isAuth() && request.auth.uid == createdBy;
    }

    match /publicRooms/{roomId} {
      allow read: if isAuth();
    }

    match /privateRooms/{roomId} {
      // if roomId in userRooms
      allow read: if isInRoom(roomId);
      allow update: if isCreator(resource.data.createdBy);
    }

    match /userRooms/{userId} {
      allow read: if isCurrentUser(userId);
    }

    match /roomMessages/{roomId} {
      match /messages/{messageId} {
        allow read: if isInRoom(roomId);
      }
    }

    match /users/{userId} {
      allow read: if isAuth();
      match /email {
        allow read: if isCurrentUser(userId);
      }
    }
  }
}